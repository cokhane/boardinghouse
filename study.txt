[STUDY]



SEQUELIZE

ELASTIC SEARCH

AWS API

AZURE

twelve factor app

azure gateway

jenkins

bamboo

docker

kubernetes

microservices

oauth

instagram api

facebook api

salesforce api

aws

expressjs

serverlessjs

machine learning

data management sparql

rdf

owl

graph database

slack common

js framework

single page application
  - it rerenders parts of the dom and fetch the data
  - it will not get a new html file but instead it only get some data and display it
  - its much faster
  - its highly reactive where its very fast and transitions goes instantly
  - you have a preocupied frontend which mean that the code from the backend is separated, usually use api
    to contact the backend
  - SEO is challenging, it takes a advance knowledge to make SPA a SEO friendly, google bot usually having a
    hard time when page is rendered async, crawler when  visiting a page usually thinks that this page is finish
     loading they dont know if there are still data that is gonna be rerendered
  - tends to favor modern browser
  - cant run when javascript is turn off



multi page application
  - every time we make a request we always get a new file new render
  - SEO is simplier
  - tons of solutions and bestpractice because we got lot of  resources when it comes buildng MPA
  - slower and needs to reload pages
  - codes are messier, front end and server side language are combine



jwt


[NODE QUESTIONS]

how to handle callbacks
promise in node
real time sockes
express and router
react lifecycle
file uploading
handle multiple request
difference of post and get
difference of put, update ,delete
similarities of get, put, delete
node express
node router
how you handle jwt
how to secure jwt


[REACT QUESTIONS]

component life cycle
how is data being handled in react



what is react?
  - it follows a component approach
  - it allows you to have a reusable ui

virtual dom
  - its a representation of real dom
  - when ever data changes, the entire ui i rendered in virtual dom
  all changes are calculated. then if all changes and calculation is done
  only then will the real dom will be updated

serverside render


uni-directional data flow
  -

what is jsx
  - combination of js and html

how jsx is read browser
  - it passes thru jsx transformer like babel and gets converted
    as javascript object

everything in react is a component
  - splits UI into independent, reusable pieces, and renders it
    independently


what is render in react?
  - every component need a render function
  - it returns a react element representation of native dom

difference of statefull and stateless
  - STATEFULL
    - stores info about components state change in memory
    - have authority to change state
    - contains history of states
  - STATELESS
    - calculates the iternal state of the components
    - no authority
    - no history
    - recieve props from the stateful components and treate them as callback
     function


what are the life cycle?
  - componentWillMount()
    is executed just before rendering both on client and server side
  - componentDidMount()
    is executed after first render only on the client side
  - componentWillRecieveProps()
   is invoked as soon as props are recieve from parent class before another
   render is called
  - shouldComponentUpdate()
   returns true or false value based on certain contion. false is default
  - comoponentWillUpdate()
   is called just before rendering take place
  -componentDidUpdate()
   is called just after rendering takes palce
  -componentWillUnmount()
   is called after the component is unmounted from the dom
   to clear up the memory space
